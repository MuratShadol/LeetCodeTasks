# -*- coding: utf-8 -*-
"""algorithms.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tS-IqNB4Sh02kxmIakOMVwxPkLuhgtHB
"""

"""
You are given an array of strings tokens that represents an arithmetic expression in a Reverse Polish Notation.

Evaluate the expression. Return an integer that represents the value of the expression.
Note that:

The valid operators are '+', '-', '*', and '/'.
Each operand may be an integer or another expression.
The division between two integers always truncates toward zero.
There will not be any division by zero.
The input represents a valid arithmetic expression in a reverse polish notation.
The answer and all the intermediate calculations can be represented in a 32-bit integer.

"""

def evalRPN(self, tokens):
    stack = []
    for t in tokens:
        if t not in "+-*/":
            stack.append(int(t))
        else:
            val1, val2 = stack.pop(), stack.pop()
            if t == "+":
                stack.append(val2 + val1)
            elif t == "-":
                stack.append(val2 - val1)
            elif t == "*":
                stack.append(val2 * val1)
            else:
                stack.append(int(float(val2)/val1))
    return stack[0]